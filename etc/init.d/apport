#! /bin/sh

### BEGIN INIT INFO
# Provides:        apport
# Required-Start:  $local_fs $remote_fs
# Required-Stop:   $local_fs $remote_fs
# Default-Start:   2 3 4 5
# Default-Stop:
# Short-Description: automatic crash report generation
### END INIT INFO

DESC="automatic crash report generation"
NAME=apport
AGENT=/usr/share/apport/apport
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$AGENT" ] || exit 0

# read default file
enabled=1
[ -e /etc/default/$NAME ] && . /etc/default/$NAME || true

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	$AGENT --start

	# check for incomplete suspend/resume or hibernate
	if [ -e /var/lib/pm-utils/status ]; then
		/usr/share/apport/apportcheckresume || true
		rm -f /var/lib/pm-utils/status
		rm -f /var/lib/pm-utils/resume-hang.log
	fi
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred

	# Check for a hung resume.  If we find one try and grab everything
	# we can to aid in its discovery.
	if [ -e /var/lib/pm-utils/status ]; then
		ps -wwef >/var/lib/pm-utils/resume-hang.log
	fi

	$AGENT --stop
}

case "$1" in
  start)
	# don't start in containers
	grep -zqs '^container=' /proc/1/environ && exit 0

	[ "$enabled" = "1" ] || [ "$force_start" = "1" ] || exit 0
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC:" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	# don't stop in containers
	grep -zqs '^container=' /proc/1/environ && exit 0

	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC:" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  restart|force-reload)
	$0 stop || true
	$0 start
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

:
